name: CI/CD Pipeline

on:
  push:
    branches: [ louis-branch ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true

env:
  HOST: "209.97.138.149"
  PASSPHRASE: "zenobe"
  SSHKEY: "b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABBfovRlqq
Ir5whGV8FhaQTmAAAAGAAAAAEAAAAzAAAAC3NzaC1lZDI1NTE5AAAAIIFQD57URBTP+tO7
iVSgUUn92hkwHIaGX9W18RaqPjlMAAAAoG1caOMye2vVCy1ORoRI7uO+xPYfjkN9HXjwql
d3/y7NpRNnc723HrRd0JexUDa1mOplKvPrduw4ncTi5Em3xxlRtRrnCffXsTSwDt/QGxLF
RcJ3k3bA1CdeJ0nO6dnBVhYqg8AmZF3ST1Y1ZSHj7LVaUv3CVdWVWmXzWxCVUSywXWFB4U
hmINWkFP9YkTBO+hrpgFQ/38CUTj6E2Qh39uI="
  USERNAME: "root"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
        
    - name: Install dependencies
      run: |
        poetry install --no-root
    
    - name: Run tests
      run: |
        poetry run python -m unittest discover optimisation/test/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: zenobe-dashboard:latest
          load: true

      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: "209.97.138.149"
          username: "root"
          password: "zenobe"
          key: ""
          script: |
            # Stop existing container
            docker stop zenobe-dashboard || true
            docker rm zenobe-dashboard || true
            
            # Run new container
            docker run -d \
              --name zenobe-dashboard \
              -p 8050:8050 \
              --restart always \
              zenobe-dashboard:latest